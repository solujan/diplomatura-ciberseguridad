{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP143sTXL+Gan3cB9XtDVh8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"f5WnEuY-uEt1"},"outputs":[],"source":["import requests\n","import base64\n","\n","import urllib\n","from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\n","from cryptography.hazmat.backends import default_backend\n","from cryptography.hazmat.primitives import padding\n","import os"]},{"cell_type":"code","source":["def print_hex(lista, bytes_):\n","  hex_list = ''\n","  for each in range(0,len(lista), 2):\n","    if each % bytes_ == 0:\n","      print(hex_list)\n","      hex_list = ''\n","    hex_list = hex_list + ' ' + lista[each:each+2]\n","  print(hex_list)"],"metadata":{"id":"NP5_d7G5e0EV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["email = 'solujan@gmail.com'\n","url = f'https://ciberseguridad.diplomatura.unc.edu.ar/cripto/padding-oracle/{email}/challenge'\n","# Solicitud\n","request = requests.get(url)\n","# Body de la respuesta\n","message = request.content\n","message_encrypted_decoded = base64.b64decode(message)\n","print_hex(message_encrypted_decoded.hex(), 32)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DSqRi-lSuLv8","executionInfo":{"status":"ok","timestamp":1694691650464,"user_tz":180,"elapsed":1691,"user":{"displayName":"sofia lujan","userId":"04644358706352499859"}},"outputId":"f6e9efc3-c49f-4d3f-f86d-84a8cd917f2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," c1 9f 7e e3 f6 f5 b5 b5 c9 f7 06 c3 e8 06 83 7e\n"," d6 95 f0 6f 83 cc 57 56 d7 d1 e7 20 cb 61 91 1e\n"," bd b1 92 1f 8a a7 bb 35 d5 6f ff ea 3b 44 13 c0\n"," 5f c2 8f 2d e3 c7 a4 e0 84 a9 5f bd 24 d5 30 28\n"," ba 1e 1e b5 c4 b0 73 cf 92 28 00 8f aa 7f e9 3d\n"," 52 a6 6c bd 31 92 66 90 52 c6 46 c6 e1 c6 34 80\n"," d9 e0 b3 4e be 48 f1 c2 2d 95 8a 2a d1 68 31 a8\n"," a9 45 30 47 4a 8b e7 70 39 0a 61 cf 47 38 52 85\n"," 1c 78 e7 0c d4 c0 d2 08 9f d9 1a fb da 7b 66 b9\n"," 2f f6 a0 43 d2 98 ad 32 dc 3e 48 06 98 e5 06 fa\n"," 38 ff 2e 99 91 8a bf d7 d0 71 04 92 49 c9 5d 10\n"," 8b de aa 3d d2 4b 4e 9c ba 78 b2 93 92 a1 79 68\n"," 23 7e 33 43 74 41 64 98 fd 67 71 39 72 5c 2a b9\n"," 82 1e 27 97 df 8e a2 35 aa ba 4f 72 26 d6 de 2c\n"]}]},{"cell_type":"markdown","source":["## Verificacion del padding o mandar la respuesta"],"metadata":{"id":"G3FFaJmtmqjM"}},{"cell_type":"code","source":["'''\n","  Manda request al oracle:\n","   - si is_answer = False entonces solo verifica validez del padding\n","   - si is_answer = True manda respuesta final al oracle\n","  @param data el mensaje a mandar al oracle\n","  @param is_answer boolean value que indica si es respuesta final\n","  @return boolean value si status code es 200 True else False\n","'''\n","def is_valid_padding(data, is_answer=False):\n","  if is_answer:\n","    url = f'https://ciberseguridad.diplomatura.unc.edu.ar/cripto/padding-oracle/solujan@gmail.com/answer'\n","  else:\n","    url = f'https://ciberseguridad.diplomatura.unc.edu.ar/cripto/padding-oracle/solujan@gmail.com/decrypt'\n","  payload = {'message':base64.b64encode(data.encode('ascii'))}\n","  # Solicitud\n","  request = requests.post(url, files=payload)\n","  # Body de la respuesta\n","  print(f'Status code: {request.status_code}\\nContent: {request.content}\\nURL: {request.url}')\n","  if request.status_code == 200:\n","    return True\n","  return False"],"metadata":{"id":"Ua_-hOCcuRFh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Oracle Padding Attack\n","![link text](https://i.stack.imgur.com/Yw8nm.png)"],"metadata":{"id":"_b6Mra6JoYPm"}},{"cell_type":"code","source":[],"metadata":{"id":"KM1-b9pwh0md"},"execution_count":null,"outputs":[]}]}